import i18n from "i18next";
import { initReactI18next } from "react-i18next";

/**
 * Translation resources for supported languages (English and Slovak).
 * Keys correspond to translation identifiers used throughout the app.
 *
 * Each language defines a `translation` object mapping keys to localized strings.
 */
const resources = {
    en: {
        translation: {
            "Grammar Analyzer": "Grammar Analyzer",
            "Enter Grammar": "Enter Grammar",
            "Show Original EBNF": "Show Original EBNF",
            "Show Transformed BNF": "Show Transformed BNF",
            "Result": "Result",
            "Step Details": "Step Details",
            "No data available": "No data available",
            "No details available": "No details available",
            "Grammar cannot be empty!": "Grammar cannot be empty!",
            "Analysis error. Check your grammar or try again.": "Analysis error. Check your grammar or try again.",
            "Toggle theme": "Toggle theme",
            "Help": "Help",
            "General": "General",
            "Grammar Syntax": "Grammar Syntax",
            "Special Symbols": "Special Symbols",
            "About Application": "About Application",
            "This web application visualizes grammar analysis using the FIRST, FOLLOW, PREDICT algorithms and checks LL(1) compliance. You can input grammars in plain or EBNF format. Step-by-step visualization helps in educational understanding of parsing algorithms.": "This web application visualizes grammar analysis using the FIRST, FOLLOW, PREDICT algorithms and checks LL(1) compliance. You can input grammars in plain or EBNF format. Step-by-step visualization helps in educational understanding of parsing algorithms.",
            "Controls": "Controls",
            "Switch analysis types": "Switch analysis types.",
            "Navigate through algorithm steps": "Navigate through algorithm steps.",
            "Return to the first step": "Return to the first step.",
            "Show the final step result": "Show the final step result.",
            "Generated non-terminals from EBNF": "Generated non-terminals from EBNF",
            "When you write grammar using EBNF syntax (e.g. with brackets, braces, or parentheses), the application internally transforms it into regular BNF format. This creates helper non-terminals such as _opt1, _rep2, or _alt3. These represent parts of the original EBNF rule.": "When you write grammar using EBNF syntax (e.g. with brackets, braces, or parentheses), the application internally transforms it into regular BNF format. This creates helper non-terminals such as _opt1, _rep2, or _alt3. These represent parts of the original EBNF rule.",
            "optional part (e.g. [expr])": "optional part (e.g. [expr])",
            "repeated part (e.g. {expr})": "repeated part (e.g. {expr})",
            "alternatives (e.g. A | B)": "alternatives (e.g. A | B)",
            "These non-terminals are shown in the results and LL(1) table and help explain how your EBNF was processed.": "These non-terminals are shown in the results and LL(1) table and help explain how your EBNF was processed.",
            "Grammar Input Examples": "Grammar Input Examples",
            "You can use standard or EBNF grammar syntax, for example:": "You can use standard or EBNF grammar syntax, for example:",
            "EBNF example": "EBNF example",
            "Special Symbols (TeX notation)": "Special Symbols (TeX notation)",
            "TeX Notation": "TeX Notation",
            "ASCII Symbol": "ASCII Symbol",
            "Displayed as": "Displayed as",
            "parseTableTitle": "Parse Table",
            "ll1Success": "Grammar is LL(1): No conflicts in the table.",
            "ll1Error": "Grammar is NOT LL(1): Conflicts found in the table.",
            "nonTerminal": "Non-terminal",
            "grammarRules": "Grammar Rules",
            "Upload .txt": "Upload .txt",
            "Grammar Input Rules": "Grammar Input Rules",
            "When writing grammar, follow these basic rules to ensure correct parsing and visualization:": "When writing grammar, follow these basic rules to ensure correct parsing and visualization:",
            "Non-terminals": "Non-terminals",
            "Write as capitalized names without quotes (e.g.": "Write as capitalized names without quotes (e.g.",
            "Terminals": "Terminals",
            "Wrap in single quotes (e.g.": "Wrap in single quotes (e.g.",
            "Separators": "Separators",
            "Use exactly one space between all symbols (non-terminals, terminals, arrows, pipes, etc.).": "Use exactly one space between all symbols (non-terminals, terminals, arrows, pipes, etc.).",
            "Arrows": "Arrows",
            "denotes a production (use ASCII dash and angle bracket).": "denotes a production (use ASCII dash and angle bracket).",
            "Alternatives": "Alternatives",
            "is used to separate multiple production options.": "is used to separate multiple production options.",
            "Empty string": "Empty string",
            "is used to represent the empty production.": "is used to represent the empty production.",
            "Correct Examples": "Correct Examples",
            "All symbols must be separated by spaces, exactly as shown above. Incorrect spacing or missing quotes may lead to parser errors.": "All symbols must be separated by spaces, exactly as shown above. Incorrect spacing or missing quotes may lead to parser errors.",
            "In some examples or outputs, special symbols are shown using TeX or ASCII notation. This allows for a clearer and more consistent representation of grammar rules. You can write grammars using plain symbols like -> or |, or their LaTeX-style equivalents shown below.": "In some examples or outputs, special symbols are shown using TeX or ASCII notation. This allows for a clearer and more consistent representation of grammar rules. You can write grammars using plain symbols like -> or |, or their LaTeX-style equivalents shown below.",
            "grammarExamplePlaceholder": "Example:\nS -> 'a' A | 'b' B\nA -> 'c' | epsilon\nB -> 'd'",
            "errorRequiredArrow":     "Each rule must contain '->'. (Rule: {{rule}})",
            "errorSingleArrow":       "Exactly one '->' expected in each rule. (Rule: {{rule}})",
            "errorInvalidLHS":        "Left-hand side must be a valid non-terminal (e.g. A, S', Expr). (Rule: {{rule}})",
            "errorEmptyAlternative":  "Empty alternative is not allowed; use 'epsilon' explicitly. (Rule: {{rule}})",
            "undefinedNonTerminals":  "Undefined non-terminal(s): {{terms}}",
            "analysisError":          "Analysis error. Check your grammar or try again."
        }
    },
    sk: {
        translation: {
            "Grammar Analyzer": "Analyzátor gramatiky",
            "Enter Grammar": "Zadajte gramatiku",
            "Show Original EBNF": "Zobraziť pôvodnú EBNF",
            "Show Transformed BNF": "Zobraziť transformovanú BNF",
            "Result": "Výsledok",
            "Step Details": "Podrobnosti kroku",
            "No data available": "Žiadne dáta nie sú dostupné",
            "No details available": "Podrobnosti nie sú dostupné",
            "Grammar cannot be empty!": "Gramatika nemôže byť prázdna!",
            "Analysis error. Check your grammar or try again.": "Chyba analýzy. Skontrolujte gramatiku alebo skúste znova.",
            "Toggle theme": "Prepnúť tému",
            "Help": "Pomoc",
            "General": "Všeobecné",
            "Grammar Syntax": "Syntax gramatiky",
            "Special Symbols": "Špeciálne znaky",
            "About Application": "O aplikácii",
            "This web application visualizes grammar analysis using the FIRST, FOLLOW, PREDICT algorithms and checks LL(1) compliance. You can input grammars in plain or EBNF format. Step-by-step visualization helps in educational understanding of parsing algorithms.": "Táto webová aplikácia vizualizuje analýzu gramatík pomocou algoritmov FIRST, FOLLOW, PREDICT a kontroluje LL(1) vlastnosti. Umožňuje zadávať gramatiky v bežnom alebo EBNF formáte. Vizualizácia krokov pomáha lepšie pochopiť algoritmy parsovania.",
            "Controls": "Ovládanie",
            "Switch analysis types": "Prepnutie medzi typmi analýzy.",
            "Navigate through algorithm steps": "Prechádzanie krokmi algoritmu.",
            "Return to the first step": "Návrat na prvý krok.",
            "Show the final step result": "Zobraziť výsledok.",
            "Generated non-terminals from EBNF": "Generované neterminály z EBNF",
            "When you write grammar using EBNF syntax (e.g. with brackets, braces, or parentheses), the application internally transforms it into regular BNF format. This creates helper non-terminals such as _opt1, _rep2, or _alt3. These represent parts of the original EBNF rule.": "Pri použití EBNF syntaxe (napr. hranaté alebo zložené zátvorky) sa gramatika automaticky transformuje na bežný BNF formát. Pri tom vznikajú pomocné neterminály ako _opt1, _rep2 alebo _alt3. Tieto reprezentujú časti pôvodných EBNF pravidiel.",
            "optional part (e.g. [expr])": "voliteľná časť (napr. [výraz])",
            "repeated part (e.g. {expr})": "opakovaná časť (napr. {výraz})",
            "alternatives (e.g. A | B)": "alternatívy (napr. A | B)",
            "These non-terminals are shown in the results and LL(1) table and help explain how your EBNF was processed.": "Tieto pomocné neterminály sa zobrazujú vo výsledkoch aj v LL(1) tabuľke a pomáhajú pochopiť, ako bola vaša gramatika transformovaná.",
            "Grammar Input Examples": "Príklady vstupnej gramatiky",
            "You can use standard or EBNF grammar syntax, for example:": "Môžete použiť bežnú alebo EBNF syntax gramatiky, napríklad:",
            "EBNF example": "Príklad EBNF",
            "Special Symbols (TeX notation)": "Špeciálne znaky (TeX notácia)",
            "TeX Notation": "TeX notácia",
            "ASCII Symbol": "ASCII symbol",
            "Displayed as": "Zobrazené ako",
            "parseTableTitle": "Parsovacia tabuľka",
            "ll1Success": "Gramatika je LL(1): V tabuľke nie sú žiadne konflikty.",
            "ll1Error": "Gramatika nie je LL(1): V tabuľke sa nachádzajú konflikty.",
            "nonTerminal": "Neterminál",
            "grammarRules": "Pravidlá gramatiky",
            "Upload .txt": "Nahrať .txt súbor",
            "Grammar Input Rules": "Pravidlá zápisu gramatiky",
            "When writing grammar, follow these basic rules to ensure correct parsing and visualization:": "Pri zápise gramatiky dodržiavajte tieto základné pravidlá, aby bola správne spracovaná a vizualizovaná:",
            "Non-terminals": "Neterminály",
            "Write as capitalized names without quotes (e.g.": "Zapisujte ako veľké písmená bez úvodzoviek (napr.",
            "Terminals": "Terminály",
            "Wrap in single quotes (e.g.": "Uzavrite do jednoduchých úvodzoviek (napr.",
            "Separators": "Medzery",
            "Use exactly one space between all symbols (non-terminals, terminals, arrows, pipes, etc.).": "Používajte presne jednu medzeru medzi každým symbolom (neterminály, terminály, šípky, rúry a pod.).",
            "Arrows": "Šípky",
            "denotes a production (use ASCII dash and angle bracket).": "označuje produkciu (použite znak '-' a '>').",
            "Alternatives": "Alternatívy",
            "is used to separate multiple production options.": "slúži na oddelenie viacerých možností produkcie.",
            "Empty string": "Prázdny reťazec",
            "is used to represent the empty production.": "označuje prázdnu produkciu.",
            "Correct Examples": "Správne príklady",
            "All symbols must be separated by spaces, exactly as shown above. Incorrect spacing or missing quotes may lead to parser errors.": "Všetky symboly musia byť oddelené medzerami presne tak, ako je to ukázané vyššie. Nesprávne medzery alebo chýbajúce úvodzovky môžu spôsobiť chyby pri parsovaní.",
            "In some examples or outputs, special symbols are shown using TeX or ASCII notation. This allows for a clearer and more consistent representation of grammar rules. You can write grammars using plain symbols like -> or |, or their LaTeX-style equivalents shown below.": "V niektorých výstupoch alebo príkladoch sa používajú špeciálne znaky v TeX alebo ASCII zápise. Vďaka tomu sú pravidlá gramatiky prehľadnejšie. Gramatiku môžete zapisovať buď pomocou znakov ako -> alebo |, alebo ich LaTeX alternatív nižšie.",
            "grammarExamplePlaceholder": "Príklad:\nS -> 'a' A | 'b' B\nA -> 'c' | epsilon\nB -> 'd'",
            "errorRequiredArrow":     "Každé pravidlo musí obsahovať '->'. (Pravidlo: {{rule}})",
            "errorSingleArrow":       "V každom pravidle očakávané presne jedno '->'. (Pravidlo: {{rule}})",
            "errorInvalidLHS":        "Ľavá strana musí byť platný neterminál (napr. A, S', Expr). (Pravidlo: {{rule}})",
            "errorEmptyAlternative":  "Prázdna alternatíva nie je povolená; použite 'epsilon'. (Pravidlo: {{rule}})",
            "undefinedNonTerminals":  "Nedefinovaný neterminál(ály): {{terms}}",
            "analysisError":          "Chyba analýzy. Skontrolujte gramatiku alebo skúste znova."
        }
    }
};

i18n.use(initReactI18next).init({
    resources,
    lng: "en",
    fallbackLng: "en",
    interpolation: {
        escapeValue: false
    }
});

export default i18n;
